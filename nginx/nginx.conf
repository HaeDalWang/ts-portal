events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # 기본 설정
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # 로그 형식
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    # 로그 파일
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # 성능 최적화
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # 업스트림 서버 정의
    upstream honeybox {
        server honeybox:8000;
        keepalive 32;
    }

    upstream ts-portal-db {
        server ts-portal-db:8001;
        keepalive 32;
    }

    # HTTP → HTTPS 리다이렉트
    server {
        listen 80;
        server_name _; # 모든 도메인에 대해
        
        # Let's Encrypt ACME Challenge 허용
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        # 나머지는 HTTPS로 리다이렉트
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS 서버 (SSL 인증서가 있을 때 활성화)
    server {
        listen 443 ssl http2;
        server_name tsapi.seungdobae.com;
        
        # SSL 인증서 설정 (Let's Encrypt)
        ssl_certificate /etc/letsencrypt/live/tsapi.seungdobae.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/tsapi.seungdobae.com/privkey.pem;
        
        # SSL 보안 설정
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # 보안 헤더
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        
        # HoneyBox API (AWS 뉴스 피드)
        location /api/feeds/ {
            proxy_pass http://honeybox/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            proxy_http_version 1.1;
            
            # CORS는 HoneyBox 애플리케이션에서 처리
        }
        
        # TS Portal DB API (팀원/고객사/일정 관리)
        location /api/db/ {
            proxy_pass http://ts-portal-db/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            proxy_http_version 1.1;
            
            # CORS는 애플리케이션에서 처리
        }
        
        # 통합 헬스체크
        location /health {
            access_log off;
            return 200 "OK - TS Portal Services Running";
            add_header Content-Type text/plain;
        }
        
        # Nginx 상태 (선택적)
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }
    }
} 